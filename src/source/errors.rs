use std::fmt::Debug;

#[derive(Debug)]
/// An enum representing errors that can occur when reading data from a
/// `BitSource`.
///
/// A general error is that the end of the source has been reached (you are
/// attempting to read more data than was written, so some data is missing).
/// The `ReachedEnd` error is used to indicate this situation.
///
/// Also, there can be implementation specific errors generated by the
/// `BitSource`, which can be of any type that implements `Debug`. The `Other`
/// error is used to indicate this.
pub enum ReadError {
    /// An error indicating that an attempt was made to read more bools from a
    /// `BitSource` than it has (left). This typically indicates that the
    /// source was incomplete or that a programming error was made.
    ReachedEnd { read_bools: usize },

    /// This indicates that an implementation specific error occurred in the
    /// `BitSource` while it attempted to read data. Implementations of it
    /// are supposed to indicate which of these errors can occur.
    Other(Box<dyn Debug>),
}
